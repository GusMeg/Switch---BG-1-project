/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    FundManager: {
      address: "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_gFaddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct txForm",
              name: "appended",
              type: "tuple",
            },
          ],
          name: "AppendTxForm",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes",
              name: "log",
              type: "bytes",
            },
          ],
          name: "LogBytes",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "log",
              type: "string",
            },
          ],
          name: "LogString",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "addressFrom",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "addressTo",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amonut",
              type: "uint256",
            },
          ],
          name: "Transaction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct txForm",
              name: "updated",
              type: "tuple",
            },
          ],
          name: "UpdateTxForm",
          type: "event",
        },
        {
          inputs: [],
          name: "answering",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "i",
              type: "uint256",
            },
          ],
          name: "checkABItrigger",
          outputs: [
            {
              internalType: "bool",
              name: "result",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "interval",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "_txForm",
              type: "tuple",
            },
          ],
          name: "checkTimeTrigger",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "checkUpkeep",
          outputs: [
            {
              internalType: "bool",
              name: "upkeepNeeded",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "performData",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_addFrom",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_addTo",
              type: "address",
            },
            {
              internalType: "address",
              name: "_addCQ",
              type: "address",
            },
            {
              internalType: "string",
              name: "_indexCQ",
              type: "string",
            },
          ],
          name: "createForm",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllForms",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string[2]",
              name: "_args",
              type: "string[2]",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getArgsAdd",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
          ],
          name: "getForm",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFunction",
          outputs: [
            {
              internalType: "contract GetFunction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLockedTxValue",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_add",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "_txForm",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_fun",
              type: "string",
            },
          ],
          name: "getValueFromABI",
          outputs: [
            {
              internalType: "string",
              name: "returnCall",
              type: "string",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "lastIndex",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "lastQuery",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "performData",
              type: "bytes",
            },
          ],
          name: "performUpkeep",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_add",
              type: "address",
            },
          ],
          name: "returnBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "addressTo",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_selector",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intervalTT",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_addCQ",
              type: "address",
            },
            {
              internalType: "string",
              name: "_indexCQ",
              type: "string",
            },
            {
              internalType: "string",
              name: "_expected",
              type: "string",
            },
            {
              internalType: "string[2]",
              name: "_args",
              type: "string[2]",
            },
          ],
          name: "setTx",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "numString",
              type: "string",
            },
          ],
          name: "st2num",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        checkUpkeep:
          "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
        performUpkeep:
          "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
      },
    },
    GetFunction: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "uint64",
              name: "subscriptionId",
              type: "uint64",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "UnexpectedRequestID",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "answer",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "Response",
          type: "event",
        },
        {
          inputs: [],
          name: "_answer",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_address",
              type: "string",
            },
            {
              internalType: "string",
              name: "_index",
              type: "string",
            },
          ],
          name: "getFun",
          outputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastError",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastResponse",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "source",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment:
          "@chainlink/contracts/src/v0.8/functions/dev/v1_0_0/FunctionsClient.sol",
      },
    },
    Testing: {
      address: "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      abi: [
        {
          inputs: [],
          name: "getInfo",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "info",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_info",
              type: "string",
            },
          ],
          name: "setInfo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    FundManager: {
      address: "0x3ac8e8c48Cb3be938af6632d0dE2e52A343E6871",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_gFaddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct txForm",
              name: "appended",
              type: "tuple",
            },
          ],
          name: "AppendTxForm",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes",
              name: "log",
              type: "bytes",
            },
          ],
          name: "LogBytes",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "string",
              name: "log",
              type: "string",
            },
          ],
          name: "LogString",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "addressFrom",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "addressTo",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amonut",
              type: "uint256",
            },
          ],
          name: "Transaction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct txForm",
              name: "updated",
              type: "tuple",
            },
          ],
          name: "UpdateTxForm",
          type: "event",
        },
        {
          inputs: [],
          name: "answering",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "i",
              type: "uint256",
            },
          ],
          name: "checkABItrigger",
          outputs: [
            {
              internalType: "bool",
              name: "result",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "interval",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "_txForm",
              type: "tuple",
            },
          ],
          name: "checkTimeTrigger",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "checkUpkeep",
          outputs: [
            {
              internalType: "bool",
              name: "upkeepNeeded",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "performData",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_addFrom",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_addTo",
              type: "address",
            },
            {
              internalType: "address",
              name: "_addCQ",
              type: "address",
            },
            {
              internalType: "string",
              name: "_indexCQ",
              type: "string",
            },
          ],
          name: "createForm",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllForms",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string[2]",
              name: "_args",
              type: "string[2]",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getArgsAdd",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
          ],
          name: "getForm",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFunction",
          outputs: [
            {
              internalType: "contract GetFunction",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLockedTxValue",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_add",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addressFrom",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "addressTo",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "txValue",
                  type: "uint256",
                },
                {
                  internalType: "enum status",
                  name: "_status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "selector",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "intervalTT",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "addCQ",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "indexCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "expectedCQ",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "argSTR",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "argAD",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "argINT",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "argType",
                  type: "uint256",
                },
              ],
              internalType: "struct txForm",
              name: "_txForm",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_fun",
              type: "string",
            },
          ],
          name: "getValueFromABI",
          outputs: [
            {
              internalType: "string",
              name: "returnCall",
              type: "string",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "lastIndex",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "lastQuery",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "performData",
              type: "bytes",
            },
          ],
          name: "performUpkeep",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_add",
              type: "address",
            },
          ],
          name: "returnBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "addressTo",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_selector",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intervalTT",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_addCQ",
              type: "address",
            },
            {
              internalType: "string",
              name: "_indexCQ",
              type: "string",
            },
            {
              internalType: "string",
              name: "_expected",
              type: "string",
            },
            {
              internalType: "string[2]",
              name: "_args",
              type: "string[2]",
            },
          ],
          name: "setTx",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "numString",
              type: "string",
            },
          ],
          name: "st2num",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        checkUpkeep:
          "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
        performUpkeep:
          "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
      },
    },
    GetFunction: {
      address: "0xaCFA54c30A692FC6dB26Aec9C50498bb20d41902",
      abi: [
        {
          inputs: [
            {
              internalType: "uint64",
              name: "subscriptionId",
              type: "uint64",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "UnexpectedRequestID",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "answer",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "Response",
          type: "event",
        },
        {
          inputs: [],
          name: "_answer",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_address",
              type: "string",
            },
            {
              internalType: "string",
              name: "_index",
              type: "string",
            },
          ],
          name: "getFun",
          outputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastError",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastResponse",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "source",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment:
          "@chainlink/contracts/src/v0.8/functions/dev/v1_0_0/FunctionsClient.sol",
      },
    },
    Testing: {
      address: "0x13046c26f18913d5eDe674574052C1d36342d737",
      abi: [
        {
          inputs: [],
          name: "getInfo",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "info",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_info",
              type: "string",
            },
          ],
          name: "setInfo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
